<launch>  
    <arg name="map_path" default="$(find aloam_velodyne)/PCD/scans.pcd"/>
    <arg name="lidar_json" default="$(find vertical_aam)/cfg/MID360_cfgs/MID360_config_2.json"/>
    <arg name="lidar_yaml" default="$(find vertical_aam)/cfg/MID360_cfgs/fast_lio_mid360.yaml"/>
    <rosparam file="$(find vertical_aam)/cfg/MID360_cfgs/relocalise_mid360.yaml" />

    <!-- livox_ros_driver2 -->
        <include file="$(find vertical_aam)/launch/lidar/msg_MID360.launch">
            <arg name="publish_freq" default = "100.0"/>
            <arg name="config_name" default = "$(arg lidar_json)"/>
        </include>
        <rosparam command="load" file="$(arg lidar_yaml)" />

    <!-- FAST-LIO -->
        <param name="feature_extract_enable" type="bool" value="0"/>
        <param name="point_filter_num" type="int" value="4"/>
        <param name="max_iteration" type="int" value="2" />
        <param name="filter_size_surf" type="double" value="0.25" />
        <param name="filter_size_map" type="double" value="0.35" />
        <param name="cube_side_length" type="double" value="2000" />
        <param name="runtime_pos_log_enable" type="bool" value="0" />
        <node pkg="fast_lio" type="fastlio_mapping" name="laserMapping" output="log" />    

    <!-- SC-A-LOAM -->
        <include file="$(find aloam_velodyne)/launch/aloam_point_lio.launch"/>
        <node name="pgo_services" pkg="aloam_velodyne" type="pgo_services.py" required="true" output="screen"/> 

    <!-- Re-localization -->    
        <node pkg="fast_lio_localization" type="global_localization.py" name="global_localization" output="log" />
        <node pkg="fast_lio_localization" type="transform_fusion.py" name="transform_fusion" output="log" />
        <node pkg="pcl_ros" type="pcd_to_pointcloud" name="map_publisher" output="log"
            args="$(arg map_path) 0.1 _frame_id:=camera_init_map cloud_pcd:=/map_init" />
</launch>